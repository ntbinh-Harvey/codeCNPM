/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import DAO.BillDAO;
import DAO.CarComponentDAO;
import DAO.ServiceDAO;
import DAO.UsedComponentDAO;
import DAO.UsedServiceDAO;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Bill;
import model.CarComponent;
import model.Service;
import model.UsedComponent;
import model.UsedService;
import model.User;

/**
 *
 * @author pc
 */
public class EditBillFrm extends javax.swing.JFrame {

    private static User user;
    private static Bill bill;
    private DefaultTableModel tableModel, tableModel2, tableModel3, tableModel4;

    /**
     * Creates new form EditBill
     */
    public EditBillFrm(User user, Bill bill) {
        this.user = user;
        this.bill = bill;
        initComponents();
        this.setSize(1400, 800);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        jLabel6.setText("Xin chào " + user.getPosition() + " " + user.getFullname());
        ArrayList<UsedService> lus = bill.getRc().getLus();
        String[] columnNames = {"STT", "Service Name", "Quantity", "Price"};
        String[][] value = new String[lus.size()][4];
        for (int i = 0; i < lus.size(); i++) {
            value[i][0] = (i + 1) + "";
            value[i][1] = lus.get(i).getSv().getName();
            value[i][2] = lus.get(i).getQuantity() + "";
            value[i][3] = lus.get(i).getPrice() + "";
        }
        tableModel = new DefaultTableModel(value, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                //unable to edit cells
                return false;
            }
        };
        jTable1.setModel(tableModel);
        ArrayList<UsedComponent> luc = bill.getRc().getLuc();
        String[] columnNames2 = {"STT", "Component Name", "Quantity", "Type", "Price"};
        String[][] value2 = new String[luc.size()][5];
        for (int i = 0; i < luc.size(); i++) {
            value2[i][0] = (i + 1) + "";
            value2[i][1] = luc.get(i).getCpn().getName();
            value2[i][2] = luc.get(i).getQuantity() + "";
            value2[i][3] = luc.get(i).getCpn().getType();
            value2[i][4] = luc.get(i).getPrice() + "";
        }
        tableModel2 = new DefaultTableModel(value2, columnNames2) {
            @Override
            public boolean isCellEditable(int row, int column) {
                //unable to edit cells
                return false;
            }
        };
        jTable2.setModel(tableModel2);
        jButton2.doClick();
        jButton5.doClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jTextField3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Edit Bill ");

        jLabel2.setText("Used Service List");

        jLabel3.setText("Used Component List");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Service Name", "Quantity", "Price"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Component Name", "Quantity", "Type", "Price"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setText("Delete");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Return to the Bill Info Frame");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel4.setText("Quantity");

        jLabel5.setText("Quantity");

        jLabel6.setText("Xin chào thu ngân");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Service Name", "Price"
            }
        ));
        jTable3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel8.setText("Service List");

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Component Name", "Stock", "Type", "Price"
            }
        ));
        jTable4.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(jTable4);

        jLabel9.setText("Component List");

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(40, 40, 40))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                                        .addComponent(jScrollPane2)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jButton7)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jButton4)
                                            .addGap(76, 76, 76)
                                            .addComponent(jButton6)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addGap(71, 71, 71)
                                        .addComponent(jButton3)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(147, 147, 147))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel4))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel5)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1))
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(26, 26, 26))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator2)
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jButton2))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private int updateAmount(Bill bill) {
        int newAmount = 0;
        ArrayList<UsedComponent> luc = bill.getRc().getLuc();
        ArrayList<UsedService> lus = bill.getRc().getLus();
        for(int i = 0; i < luc.size(); i++) {
            newAmount += luc.get(i).getPrice();
        }
        for(int i = 0; i < lus.size(); i++) {
            newAmount += lus.get(i).getPrice();
        }
        return newAmount;
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        UsedServiceDAO usd = new UsedServiceDAO();
        ArrayList<UsedService> lus = bill.getRc().getLus();
        boolean exist = false;
        //validate
        if (jTextField1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please input the service quantity");
            return;
        }
        if (jTable3.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row in service table to add");
            return;
        }
        int quantity = Integer.parseInt(jTextField1.getText());
        int additionalPrice = quantity * Integer.parseInt(jTable3.getValueAt(jTable3.getSelectedRow(), 2).toString());
        for (int i = 0; i < lus.size(); i++) {
            // so sanh 2 gia tri id cua dich vu, neu trung nhau thi k can them vao bang ma chi sua gia tri cua row trong bang ay
            if (jTable3.getValueAt(jTable3.getSelectedRow(), 0).toString().equals(lus.get(i).getSv().getId() + "")) {
                exist = true;
                int currentQuantity = lus.get(i).getQuantity();
                int currentPrice = lus.get(i).getPrice();
                // update jTable
                jTable1.setValueAt(currentQuantity + quantity, i, 2);
                jTable1.setValueAt(currentPrice + additionalPrice, i, 3);
                //update Bill Object
                lus.get(i).setQuantity(currentQuantity + quantity);
                lus.get(i).setPrice(currentPrice + additionalPrice);
                // update to db
                Service sv = new Service();
                sv.setId(Integer.parseInt(jTable3.getValueAt(jTable3.getSelectedRow(), 0).toString()));
                UsedService us = new UsedService(lus.get(i).getId(), currentQuantity + quantity, currentPrice + additionalPrice, sv);
                if (!usd.addUsedService(us, bill.getRc().getId())) {
                    JOptionPane.showMessageDialog(this, "Can't update to database due to some errors");
                }
                break;
            }
        }
        if (!exist) {
            UsedService us = new UsedService();
            us.setQuantity(quantity);
            us.setPrice(additionalPrice);
            // update Bill Object
            Service s = new Service();
            s.setId(Integer.parseInt(jTable3.getValueAt(jTable3.getSelectedRow(), 0).toString()));
            s.setName(jTable3.getValueAt(jTable3.getSelectedRow(), 1).toString());
            us.setSv(s);
            // update db
            if (!usd.addUsedService(us, bill.getRc().getId())) {
                JOptionPane.showMessageDialog(this, "Can't update to database due to some errors");
            }
            lus.add(us);
            // update jTable
            int lastSTT = jTable1.getRowCount();
            tableModel.addRow(new Object[]{lastSTT + 1, jTable3.getValueAt(jTable3.getSelectedRow(), 1).toString(), quantity, additionalPrice});
        }
        bill.getRc().setLus(lus);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        UsedComponentDAO ucd = new UsedComponentDAO();
        ArrayList<UsedComponent> luc = bill.getRc().getLuc();
        boolean exist = false;
        //validate
        if (jTextField2.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please input the component quantity");
            return;
        }
        if (jTable4.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row in component table to add");
            return;
        }
        int quantity = Integer.parseInt(jTextField2.getText());
        if (Integer.parseInt(jTable4.getValueAt(jTable4.getSelectedRow(), 3).toString()) < quantity) {
            JOptionPane.showMessageDialog(this, "The component stocks is not enough");
            return;
        }
        int additionalPrice = quantity * Integer.parseInt(jTable4.getValueAt(jTable4.getSelectedRow(), 4).toString());
        for (int i = 0; i < luc.size(); i++) {
            // so sanh 2 gia tri id cua linh kien, neu trung nhau thi k can them vao bang ma chi sua gia tri cua row trong bang ay
            if (jTable4.getValueAt(jTable4.getSelectedRow(), 0).toString().equals(luc.get(i).getCpn().getId() + "")) {
                exist = true;
                int currentQuantity = luc.get(i).getQuantity();
                int currentPrice = luc.get(i).getPrice();
                // update jTable
                jTable2.setValueAt(currentQuantity + quantity, i, 2);
                jTable2.setValueAt(currentPrice + additionalPrice, i, 4);
                // update Bill Object
                luc.get(i).setQuantity(currentQuantity + quantity);
                luc.get(i).setPrice(currentPrice + additionalPrice);
                // update to db
                CarComponent cpn = new CarComponent();
                cpn.setId(Integer.parseInt(jTable4.getValueAt(jTable4.getSelectedRow(), 0).toString()));
                UsedComponent uc = new UsedComponent(luc.get(i).getId(), currentQuantity + quantity, currentPrice + additionalPrice, cpn);
                if (!ucd.addUsedComponent(uc, bill.getRc().getId())) {
                    JOptionPane.showMessageDialog(this, "Can't update to database due to some errors");
                }
                break;
            }
        }
        if (!exist) {
            UsedComponent uc = new UsedComponent();
            uc.setQuantity(quantity);
            uc.setPrice(additionalPrice);
            // update Bill Object
            CarComponent c = new CarComponent();
            c.setId(Integer.parseInt(jTable4.getValueAt(jTable4.getSelectedRow(), 0).toString()));
            c.setName(jTable4.getValueAt(jTable4.getSelectedRow(), 1).toString());
            c.setType(jTable4.getValueAt(jTable4.getSelectedRow(), 2).toString());
            uc.setCpn(c);
            // update db
            if (!ucd.addUsedComponent(uc, bill.getRc().getId())) {
                JOptionPane.showMessageDialog(this, "Can't update to database due to some errors");
            }
            luc.add(uc);
            // update jTable
            int lastSTT = jTable2.getRowCount();
            tableModel2.addRow(new Object[]{lastSTT + 1, jTable4.getValueAt(jTable4.getSelectedRow(), 1).toString(), quantity, jTable4.getValueAt(jTable4.getSelectedRow(), 2).toString(), additionalPrice});
        }
        bill.getRc().setLuc(luc);
        jButton5.doClick();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        UsedComponentDAO ucd = new UsedComponentDAO();
        int index = jTable2.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row in component table to delete");
            return;
        }
        UsedComponent uc = bill.getRc().getLuc().get(jTable2.getSelectedRow());
        if (!ucd.deleteUsedComponent(uc)) {
            JOptionPane.showMessageDialog(this, "Can't update to database due to some errors");
        }
        bill.getRc().getLuc().remove(jTable2.getSelectedRow());
        tableModel2.removeRow(jTable2.getSelectedRow());
        jButton5.doClick();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ServiceDAO sv = new ServiceDAO();
        ArrayList<Service> lsv = sv.searchService(jTextField3.getText());
        String[] columnNames3 = {"ID", "Service Name", "Price"};
        String[][] value3 = new String[lsv.size()][3];
        for (int i = 0; i < lsv.size(); i++) {
            value3[i][0] = lsv.get(i).getId() + "";
            value3[i][1] = lsv.get(i).getName();
            value3[i][2] = lsv.get(i).getPrice() + "";
        }
        tableModel3 = new DefaultTableModel(value3, columnNames3) {
            @Override
            public boolean isCellEditable(int row, int column) {
                //unable to edit cells
                return false;
            }
        };
        jTable3.setModel(tableModel3);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        CarComponentDAO cpn = new CarComponentDAO();
        ArrayList<CarComponent> lcpn = cpn.searchComponent(jTextField4.getText());
        String[] columnNames4 = {"ID", "Component Name", "Type", "Stock", "Price"};
        String[][] value4 = new String[lcpn.size()][5];
        for (int i = 0; i < lcpn.size(); i++) {
            value4[i][0] = lcpn.get(i).getId() + "";
            value4[i][1] = lcpn.get(i).getName();
            value4[i][2] = lcpn.get(i).getType();
            value4[i][3] = lcpn.get(i).getStock() + "";
            value4[i][4] = lcpn.get(i).getPrice() + "";
        }
        tableModel4 = new DefaultTableModel(value4, columnNames4) {
            @Override
            public boolean isCellEditable(int row, int column) {
                //unable to edit cells
                return false;
            }
        };
        jTable4.setModel(tableModel4);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        UsedServiceDAO usd = new UsedServiceDAO();
        int index = jTable1.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row in service table to delete");
            return;
        }
        int usedServiceId = bill.getRc().getLus().get(jTable1.getSelectedRow()).getId();
        if (!usd.deleteUsedService(usedServiceId)) {
            JOptionPane.showMessageDialog(this, "Can't update to database due to some errors");
        }
        bill.getRc().getLus().remove(jTable1.getSelectedRow());
        tableModel.removeRow(jTable1.getSelectedRow());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        BillDAO bd = new BillDAO();
        bill.setAmount(updateAmount(bill));
        if(!bd.updateBillTotalAmount(bill)) {
            JOptionPane.showMessageDialog(this, "Can't update to database due to some errors");
            return;
        }
        (new BillInfoFrm(user, bill)).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditBillFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditBillFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditBillFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditBillFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditBillFrm(user, bill).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
